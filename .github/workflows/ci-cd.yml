name: Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: opus
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install backend dependencies (Node)
        run: |
          cd backend/node
          npm install

      - name: Install backend dependencies (Django)
        run: |
          cd backend/django
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Install backend dependencies (Flask)
        run: |
          cd backend/flask
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Run tests for each backend and frontend
          cd frontend && npm test
          cd ../backend/node && npm test
          cd ../django && source venv/bin/activate && python manage.py test
          cd ../flask && source venv/bin/activate && python -m unittest discover
